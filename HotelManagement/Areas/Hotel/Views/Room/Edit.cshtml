@model HotelManagement.Web.ViewModels.RoomModels.RoomEditViewModel

@{
    ViewData["Title"] = $"Edit room";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>Edit Room</h1>

<h4>Room number: @Model.RoomNumber</h4>
<hr />
<div class="row" style="font-size:17px">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @if (TempData["Error"] != null)
            {
                <div asp-validation-summary="None" class="text-danger">@TempData["Error"].ToString()</div>
            }
            <div class="form-group">
                <label asp-for="RoomNumber" class="control-label"></label>
                <input asp-for="RoomNumber" class="form-control" />
                <span asp-validation-for="RoomNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Capacity" class="control-label"></label>
                <input asp-for="Capacity" class="form-control" />
                <span asp-validation-for="Capacity" class="text-danger"></span>
            </div>
            <p></p>
         
            <p><i>(Current room type: @Model?.RoomTypeDtos?.Where(rt => rt.Id == Model.currentRoomTypeId)?.FirstOrDefault()?.Type)</i></p>

            <div class="mb-3">
                <label asp-for="@Model.RoomTypeDtoId" class="form-label">Room type</label>
                <select asp-for="@Model.RoomTypeDtoId" class="form-control">

                    @foreach (var rt in Model.RoomTypeDtos)
                    {
                        if (rt.Id == Model.currentRoomTypeId)
                        {
                            <option value="@rt.Id" selected>@rt.Type</option>
                        }
                        else
                        {
                            <option value="@rt.Id">@rt.Type</option>
                        }
                        
                    }
                </select>
                <span asp-validation-for="RoomTypeDtoId" class="text-danger"></span>
            </div>

            <p><i>(Current floor#: @Model?.FloorDtos?.Where(f => f.Id == Model.currentFloorId)?.FirstOrDefault()?.FloorNumber)</i></p>

            <div class="mb-3">
                <label asp-for="@Model.FloorId" class="form-label">Floor</label>
                <select asp-for="@Model.FloorId" class="form-control">

                    @foreach (var f in Model.FloorDtos)
                    {
                        
                        <option value="@f.Id">@f.FloorNumber</option>
                    }
                </select>
                <span asp-validation-for="FloorId" class="text-danger"></span>
            </div>

            <p></p>
            <input asp-for="Id" class="visually-hidden"/>

            <div class="form-group row">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
</div>
     
</div>

<div>
    <a asp-controller="Floor" asp-action="All" asp-route-id="@Model.currentFloorId">Back to Floor</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
