@using HotelManagement.Web.ViewModels.FloorModels
@using HotelManagement.Data.Models.Models
@model HotelManagement.Web.ViewModels.FloorModels.AllRoomsViewModel

@{
    ViewBag.Title = "All Rooms on floor";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
    <div class="row">
        <div class="form-group col-md-2 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="RoomType"></label>
                <select asp-for="RoomType" class="form-control">
                    <option value="">All</option>
                    @foreach (var type in Model.RoomTypes)
                    {
                        <option value="@type">@type</option>
                    }
                   
                </select>
            </div>
        </div>
        <div class="form-group col-md-2">
                <label asp-for="Active"></label>
            <div class="form-group">
                <input asp-for="Active" type="checkbox" class="btn-check form-check" id="btn-check-2-outlined">
                <label class="btn btn-outline-danger" for="btn-check-2-outlined">Checked</label><br>
            </div>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-2">
            <div class="form-group">
                <label asp-for="RoomSorting"></label>
                <select asp-for="RoomSorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">By room number</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 0;
    }

    var maxPage = Math.Ceiling((double)Model.TotalRoomsCount /
        AllRoomsViewModel.RoomsPerPage) - 1;
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 0 ? "disabled" : string.Empty)"
           asp-controller="ManageEmployees"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.RoomType"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.RoomSorting)"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Rooms.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary 
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="ManageEmployees"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.RoomType"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.RoomSorting)">>></a>
    </div>
</div>

@if (!Model.Rooms.Any())
{
    <h2 class="text-center">No rooms found by the given criteria!</h2>
}

<div class="row">
    @foreach (var house in Model.Rooms)
    {
        <partial name="_RoomPartial" model="@house" />
    }
</div>
