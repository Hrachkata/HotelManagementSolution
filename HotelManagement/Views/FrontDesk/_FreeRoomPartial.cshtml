@using HotelManagement.Web.ViewModels.FrontDeskModels.ServiceModels
@model SingleFreeRoomModel

<style>
    .available
    {
        background-color: lightgreen;
        border-radius: 10% / 50%;
    }
    .unavailable 
    {
        background-color: lightcoral;
        border-radius: 15px;
    
    }
        
</style>


@if (Model.IsCleaned == true && Model.IsOccupied == false && Model.IsOutOfService == false)
    {
        <tr class="table-success">
        <th scope="row">@Model.RoomNumber</th>
        <td >@Model.Capacity</td>
        
        <td>@Model.RoomType</td>
        <td>@Model.IsOccupied</td>
        <td>@Model.IsCleaned</td>
        <td>@Model.IsOutOfService</td>
        <td >@Model.PricePerPerson</td>
        <form method="get">
            <input hidden="true" asp-for="@Model.PricePerPerson" class="form-control" autocomplete="RFID" aria-required="true" />
            <input hidden="true" asp-for="@Model.Capacity" class="form-control" autocomplete="RFID" aria-required="true" />
            <input hidden="true" asp-for="@Model.ArrivalDate" class="form-control" autocomplete="RFID" aria-required="true" />


        
        <td><button asp-action="Reserve" asp-controller="FrontDesk">Reserve</button></td>
        </form>
        </tr>
    }
else
    {
    <tr class="table-danger">
        <th scope="row">@Model.RoomNumber</th>
        <td>@Model.Capacity</td>
        <td>@Model.RoomType</td>
        <td>@Model.IsOccupied</td>
        <td>@Model.IsCleaned</td>
        <td>@Model.IsOutOfService</td>
        <td>@Model.PricePerPerson</td>
        <td><button disabled>Reserve</button></td>
        </tr>   
    }





